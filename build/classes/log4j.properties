# Configure logging for testing: optionally with log file
log4j.rootLogger=WARN, stdout
# log4j.rootLogger=WARN, stdout, logfile

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d %p [%c] - %m%n

log4j.appender.logfile=org.apache.log4j.FileAppender
log4j.appender.logfile.File=target/spring.log
log4j.appender.logfile.layout=org.apache.log4j.PatternLayout
log4j.appender.logfile.layout.ConversionPattern=%d %p [%c] - %m%n
#log4j.rootLogger=FINE
#log4j.rootLogger=INFO,consoleAppender,logfile,MAIL
#log4j.addivi​​ty.org.apache=true

#ConsoleAppender，控制台輸出
#FileAppender，文件日誌輸出
#SMTPAppender，發郵件輸出日誌
#SocketAppender，Socket日誌
#NTEventLogAppender，Window NT日誌
#SyslogAppender，
#JMSAppender，
#AsyncAppender，
#NullAppender

#文件輸出：RollingFileAppender
#log4j.rootLogger = INFO,logfile
#log4j.appender.logfile = org.apache.log4j.RollingFileAppender
#log4j.appender.logfile.Threshold = INFO
# 輸出以上的INFO信息
#log4j.appender.logfile.File = INFO_log.html
#保存log文件路徑
#log4j.appender.logfile.Append = true
# 默認為true，添加到末尾，false在每次啟動時進行覆蓋
#log4j.appender.logfile.MaxFileSize = 1MB
# 一個log文件的大小，超過這個大小就又會生成1個日誌# KB ，MB，GB
#log4j.appender.logfile.MaxBackupIndex = 3
# 最多保存3個文件備份
#log4j.appender.logfile.layout = org.apache.log4j.HTMLLayout
# 輸出文件的格式
#log4j.appender.logfile.layout.LocationInfo = true
#是否顯示類名和行數
#log4j.appender.logfile.layout.Title =title:\u63d0\u9192\u60a8\uff1a\u7cfb\u7edf\u53d1\u751f\u4e86\u4e25\u91cd\u9519\u8bef
#html頁面的 < title >
############################## SampleLayout ################### #################
# log4j.appender.logfile.layout = org.apache.log4j.SampleLayout
############################## PatternLayout ################### ################
# log4j.appender.logfile.layout = org.apache.log4j.PatternLayout
# log4j.appender.logfile.layout.ConversionPattern =% d % p [ % c] - % m % n % d
############################## XMLLayout ################### ####################
# log4j.appender.logfile.layout = org.apache.log4j.XMLLayout
# log4j.appender.logfile.layout.LocationInfo = true #是否顯示類名和行數
############################## TTCCLayout ################### ###################
# log4j.appender.logfile.layout = org.apache.log4j.TTCCLayout
# log4j.appender.logfile.layout.DateFormat = ISO8601
#NULL, RELATIVE, ABSOLUTE, DATE or ISO8601.
# log4j.appender.logfile.layout.TimeZoneID = GMT - 8 : 00
# log4j.appender.logfile.layout.CategoryPrefixing = false ##默認為true 打印類別名
# log4j.appender.logfile.layout.ContextPrinting = false ##默認為true 打印上下文信息
# log4j.appender.logfile.layout.ThreadPrinting = false ##默認為true 打印線程名
# 打印信息如下：
#2007 - 09 - 13 14 : 45 : 39 , 765 [http - 8080 - 1 ] ERROR com.poxool.test.test - error成功關閉鏈接
################################################## #############################
#每天文件的輸出：DailyRollingFileAppender
#log4j.rootLogger = INFO,errorlogfile
#log4j.appender.errorlogfile = org.apache.log4j.DailyRollingFileAppender
#log4j.appender.errorlogfile.Threshold = ERROR
#log4j.appender.errorlogfile.File = ../logs/ERROR_log
#log4j.appender.errorlogfile.Append = true
#默認為true，添加到末尾，false在每次啟動時進行覆蓋
#log4j.appender.errorlogfile.ImmediateFlush = true
#直接輸出，不進行緩存
# ' . ' yyyy - MM: 每個月更新一個log日誌
# ' . ' yyyy - ww: 每個星期更新一個log日誌
# ' . ' yyyy - MM - dd: 每天更新一個log日誌
# ' . ' yyyy - MM - dd - a: 每天的午夜和正午更新一個log日誌
# ' . ' yyyy - MM - dd - HH: 每小時更新一個log日誌
# ' . ' yyyy - MM - dd - HH - mm: 每分鐘更新一個log日誌
#log4j.appender.errorlogfile.DatePattern = ' . ' yyyy - MM - dd ' .log '
#文件名稱的格式
#log4j.appender.errorlogfile.layout = org.apache.log4j.PatternLayout
#log4j.appender.errorlogfile.layout.ConversionPattern =%d %p [ %c] - %m %n %d

#控制台輸出：
#log4j.rootLogger = INFO,consoleAppender
#log4j.appender.consoleAppender = org.apache.log4j.ConsoleAppender
#log4j.appender.consoleAppender.Threshold = ERROR
#log4j.appender.consoleAppender.layout = org.apache.log4j.PatternLayout
#log4j.appender.consoleAppender.layout.ConversionPattern =%d %-5p %m %n
#log4j.appender.consoleAppender.ImmediateFlush = true

# 直接輸出，不進行緩存
#log4j.appender.consoleAppender.Target = System.err
# 默認是System.out方式輸出

#發送郵件：SMTPAppender
#log4j.rootLogger = INFO,MAIL
#log4j.appender.MAIL = org.apache.log4j.net.SMTPAppender
#log4j.appender.MAIL.Threshold = INFO
#log4j.appender.MAIL.BufferSize = 10
#log4j.appender.MAIL.From =
#log4j.appender.MAIL.SMTPHost = smtp.gmail.com
#log4j.appender.MAIL.Subject = Log4J Message
#log4j.appender.MAIL.To =
#log4j.appender.MAIL.layout = org.apache.log4j.PatternLayout
#log4j.appender.MAIL.layout.ConversionPattern =%d - %c -%-4r [%t] %-5p %c %x - %m %n

#資料庫：JDBCAppender
#log4j.appender.DATABASE = org.apache.log4j.jdbc.JDBCAppender
#log4j.appender.DATABASE.URL = jdbc:oracle:thin:@ 210.51 . 173.94 : 1521 :YDB
#log4j.appender.DATABASE.driver = oracle.jdbc.driver.OracleDriver
#log4j.appender.DATABASE.user = ydbuser
#log4j.appender.DATABASE.password = ydbuser
#log4j.appender.DATABASE.sql = INSERT INTO A1 (TITLE3) VALUES ( ' %d - %c %-5p %c %x - %m%n ' )
#log4j.appender.DATABASE.layout = org.apache.log4j.PatternLayout
#log4j.appender.DATABASE.layout.ConversionPattern =% d - % c -%- 4r [ % t] %- 5p % c % x - % m % n
#資料庫的鏈接會有問題，可以重寫org.apache.log4j.jdbc.JDBCAppender的getConnection() 使用數據庫鏈接池去得鏈接，可以避免insert一條就鏈接一次數據庫。